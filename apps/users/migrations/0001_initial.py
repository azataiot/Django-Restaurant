# Generated by Django 2.1.7 on 2019-03-25 22:28

import datetime
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('nick_name', models.CharField(blank=True, default='', max_length=50, null=True, verbose_name='Nick Name')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='Birth Day')),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female')], default='female', max_length=6, verbose_name='Gender')),
                ('address', models.CharField(default='', max_length=100, verbose_name='User Address')),
                ('mobile', models.CharField(blank=True, max_length=12, null=True, verbose_name='Mobile Number')),
                ('avatar', models.ImageField(default='image/default.png', upload_to='image/%Y/%m')),
                ('is_client', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User Profile',
                'verbose_name_plural': 'User Profile',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Banner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Slides')),
                ('image', models.ImageField(default='banner/default.png', upload_to='image/%Y/%m')),
                ('slide_to_url', models.URLField(verbose_name='ULR')),
                ('slide_index', models.IntegerField(default=100, verbose_name='Index of the Slides')),
                ('add_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='Added Time')),
            ],
            options={
                'verbose_name': 'Site Slides',
                'verbose_name_plural': 'Site Slides',
            },
        ),
        migrations.CreateModel(
            name='EmailVerifyRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20, verbose_name='Verification Code')),
                ('email', models.EmailField(max_length=50, verbose_name='Email')),
                ('send_type', models.CharField(choices=[('register', 'Registration Verification Code'), ('forget', 'Forget Password Verification Code')], default='register', max_length=8, verbose_name='Verification Code Type')),
                ('send_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='Verification Code Send Time')),
            ],
            options={
                'verbose_name': 'Email Verification Code',
                'verbose_name_plural': 'Email Verification Code',
            },
        ),
    ]
